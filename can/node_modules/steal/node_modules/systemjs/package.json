{
  "name": "systemjs",
  "version": "0.16.6",
  "description": "System loader extension for flexible AMD & CommonJS support",
  "main": "dist/system.src.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/systemjs/systemjs.git"
  },
  "author": {
    "name": "Guy Bedford"
  },
  "license": "MIT",
  "dependencies": {
    "es6-module-loader": "git://github.com/bitovi/es6-module-loader.git#v0.16.3-bitovi.5"
  },
  "devDependencies": {
    "babel-core": "^4.7.16",
    "qunit": "^0.6.2",
    "uglify-js": "~2.4.13",
    "traceur": "0.0.87"
  },
  "scripts": {
    "test": "npm run test:babel && npm run test:traceur",
    "test:babel": "qunit -c s:./dist/system.js -t ./test/test-babel.js",
    "test:traceur": "qunit -c s:./dist/system.js -t ./test/test.js"
  },
  "gitHead": "e4bdc9034f6ae26c6098ba6eb18e632fdb8d83c8",
  "readme": "SystemJS\n========\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/systemjs/systemjs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n_For upgrading to SystemJS 0.16, see the [ES6 Module Loader 0.16 release upgrade notes for more information](https://github.com/ModuleLoader/es6-module-loader/releases/tag/v0.16.0), or read the updated [Getting Started](#getting-started) guide below._\n\nUniversal dynamic module loader - loads ES6 modules, AMD, CommonJS and global scripts in the browser and NodeJS. Works with both Traceur and Babel.\n\n* [Loads any module format](https://github.com/systemjs/systemjs/wiki/Module-Format-Support) with [exact circular reference and binding support](https://github.com/ModuleLoader/es6-module-loader/wiki/Circular-References-&-Bindings).\n* Loads [ES6 modules compiled into the `System.register` bundle format for production](https://github.com/systemjs/systemjs/wiki/Production-Workflows), maintaining circular references support.\n* Supports RequireJS-style [map](https://github.com/systemjs/systemjs/wiki/Map-Configuration), [paths](https://github.com/ModuleLoader/es6-module-loader/wiki/Configuring-the-Loader#paths-implementation), [bundles](https://github.com/systemjs/systemjs/wiki/Production-Workflows#bundle-extension) and [global shims](https://github.com/systemjs/systemjs/wiki/Module-Format-Support#globals-global).\n* [Loader plugins](#plugins) allow loading assets through the module naming system such as CSS, JSON or images.\n\nDesigned to work with the [ES6 Module Loader polyfill](https://github.com/ModuleLoader/es6-module-loader) (9KB) for a combined total footprint of 16KB minified and gzipped.\n\nRuns in IE8+ and NodeJS.\n\nFor discussion, [see the Google Group](https://groups.google.com/group/systemjs).\n\nFor a list of guides and tools, see the [community project page](https://github.com/systemjs/systemjs/wiki/Community-Projects).\n\nDocumentation\n---\n\n* [Basic Use](https://github.com/systemjs/systemjs/wiki/Basic-Use)\n* [Configuration Options](https://github.com/systemjs/systemjs/wiki/Configuration-Options)\n* [Loader Configuration](https://github.com/ModuleLoader/es6-module-loader/wiki/Configuring-the-Loader)\n* [Map Configuration](https://github.com/systemjs/systemjs/wiki/Map-Configuration)\n* [Meta Configuration](https://github.com/systemjs/systemjs/wiki/Meta-Configuration)\n* [Module Format Support](https://github.com/systemjs/systemjs/wiki/Module-Format-Support)\n* [Relative Dynamic Loading](https://github.com/systemjs/systemjs/wiki/Relative-Dynamic-Loading)\n* [Versions Extension](https://github.com/systemjs/systemjs/wiki/Versions-Extension)\n* [Production Workflows](https://github.com/systemjs/systemjs/wiki/Production-Workflows)\n* [Creating Plugins](https://github.com/systemjs/systemjs/wiki/Creating-a-Plugin)\n* [Creating a Custom Module Format](https://github.com/systemjs/systemjs/wiki/Creating-a-Custom-Format-Extension)\n\nGetting Started\n---\n\n### Browser Use\n\nDownload [`es6-module-loader.js`](https://github.com/ModuleLoader/es6-module-loader/blob/v0.16.0/dist/es6-module-loader.js) into the same folder as `system.js`.\n\nLoad SystemJS with a single script tag:\n\n```html\n<script src=\"system.js\"></script>\n```\n\nIt will then load `es6-module-loader.js` itself.\n\nTo load ES6, locate [`traceur.js`](https://raw.githubusercontent.com/jmcriffey/bower-traceur/0.0.87/traceur.js) in the baseURL path and it will be loaded when needed.\n\nFor use with Babel, locate the `browser.js` file at `babel.js` in the baseURL and set:\n\n```html\n<script>\n  System.transpiler = 'babel';\n</script>\n```\n\nAlternatively a custom path to Babel or Traceur can also be set through paths:\n\n```javascript\nSystem.config({\n  paths: {\n    traceur: 'path/to/traceur.js'\n  }\n});\n```\n\n### NodeJS Use\n\nTo load modules in NodeJS, install SystemJS with:\n\n```\n  npm install systemjs traceur\n```\n\n(making sure to also install Traceur or Babel as needed, as they are not included as dependencies as of SystemJS 0.16)\n\nWe can then load modules equivalently to in the browser:\n\n```javascript\nvar System = require('systemjs');\n\n/* \n * Include\n *   System.transpiler = 'babel';\n * to use Babel instead of Traceur\n */\n\n// loads './app.js' from the current directory\nSystem.import('./app').then(function(m) {\n  console.log(m);\n});\n```\n\nIf configuring the `baseURL` for use in Windows, prepend `file:` i.e.\n\n```javascipt\nSystem.config({\n baseURL: 'file:' + path.resolve('../path')\n});\n```\n\n### Plugins\n\nPlugins handle alternative loading scenarios, including loading assets such as CSS or images, and providing custom transpilation scenarios.\n\nSupported Plugins:\n\n* [CSS](https://github.com/systemjs/plugin-css) `System.import('my/file.css!')`\n* [Image](https://github.com/systemjs/plugin-image) `System.import('some/image.png!image')`\n* [JSON](https://github.com/systemjs/plugin-json) `System.import('some/data.json!').then(function(json){})`\n* [Text](https://github.com/systemjs/plugin-text) `System.import('some/text.txt!text').then(function(text) {})`\n\nAdditional Plugins:\n\n* [CoffeeScript](https://github.com/forresto/plugin-coffee) `System.import('./test.coffee!')`\n* [Jade](https://github.com/johnsoftek/plugin-jade)\n* [JSX](https://github.com/floatdrop/plugin-jsx) `System.import('template.jsx!')`\n* [Markdown](https://github.com/guybedford/plugin-md) `System.import('app/some/project/README.md!').then(function(html) {})`\n* [WebFont](https://github.com/guybedford/plugin-font) `System.import('google Port Lligat Slab, Droid Sans !font')`\n* [Ember Handlebars](https://github.com/n-fuse/plugin-ember-hbs) `System.import('template.hbs!')`\n\nPlugins are loaded from the module name of the extension. To set them up, you'll most likely want to add map configuration. For example:\n\n```javascript\nSystem.map['css'] = 'path/to/css/plugin';\n```\n\nLoading through plugin is indicated with `!` at the end of the name:\n\n```javascript\nSystem.import('file.css!');      // will use the \"css\" plugin, assumed from the extension\nSystem.import('file.css!text');  // will use the \"text\" plugin, instead of checking the extension\n```\n\n[Read the guide here on creating plugins](https://github.com/systemjs/systemjs/wiki/Creating-a-Plugin).\n\n#### Running the tests\n\nTo install the dependencies correctly, run `bower install` from the root of the repo, then open `test/test.html` in a browser with a local server\nor file access flags enabled.\n\nLicense\n---\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/systemjs/systemjs/issues"
  },
  "homepage": "https://github.com/systemjs/systemjs#readme",
  "_id": "systemjs@0.16.6",
  "_shasum": "aad442229a0f0594e91511bf53d1b62636207886",
  "_from": "git://github.com/bitovi/systemjs.git#0.16.6-bitovi.7",
  "_resolved": "git://github.com/bitovi/systemjs.git#e4bdc9034f6ae26c6098ba6eb18e632fdb8d83c8"
}
